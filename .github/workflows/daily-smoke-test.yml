name: daily-smoke-test
on:
  workflow_dispatch: # As per documentation, the colon is needed even though no config is required.
  schedule:
    # Cron syntax is "minute[0-59] hour[0-23] date[1-31] month[1-12] day[0-6]". '*' is 'any value', and multiple values
    # can be specified with comma-separated lists. All times are UTC.
    # So this expression means "run at 17:30 UTC every day". This time was chosen because it corresponds to
    # 9:30AM PST, meaning that any issues will be surfaced on working days when people are likely to be awake and online.
    - cron: "30 17 * * 1-5"

jobs:
  # Step 1: Build the tarballs so they can be installed locally.
  build-code-analyzer-tarball:
    name: Build code analyzer tarball
    uses: ./.github/workflows/build-tarball.yml
    with:
      target-branch: 'dev'
  # Step 2: Actually run the tests.
  smoke-test:
    name: Run smoke tests
    needs: [build-code-analyzer-tarball]
    uses: ./.github/workflows/run-tests.yml
    with:
      use-tarballs: true
      tarball-suffix: 'dev'
    secrets: inherit
  # Step 3: Retry on failure after install timeout or flaky tests
  retry-on-failure:
    name: Retry on failure
    runs-on: ubuntu-latest
    needs: [build-code-analyzer-tarball, smoke-test]
    if: failure() && fromJSON(github.run_attempt) < 3
    steps:
      - name: Trigger retry workflow
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ github.token }}
        run: |
          gh workflow run retry.yml -F github_run_id=${{ github.run_id }}
  # Step 4: Build a VSIX artifact for use if needed.
  create-vsix-artifact:
    name: 'Upload VSIX as artifact'
    uses: ./.github/workflows/create-vsix-artifact.yml
    secrets: inherit
  # Step 5: Report any problems
  report-problems:
    name: Report problems
    runs-on: ubuntu-latest
    needs: [build-code-analyzer-tarball, smoke-test, create-vsix-artifact]
    if: failure() && fromJSON(github.run_attempt) >= 3
    steps:
      - name: Report problems
        shell: bash
        env:
          RUN_LINK: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        run: |
          ALERT_SEV="info"
          ALERT_SUMMARY="Daily smoke test failed after 3 attempts on ${{ runner.os }}"

          generate_post_data() {
            cat <<EOF
            {
              "payload": {
                "summary": "${ALERT_SUMMARY}",
                "source": "Github Actions",
                "severity": "${ALERT_SEV}"
              },
              "links": [{
                "href": "${{ env.RUN_LINK }}",
                "text": "Link to action execution"
              }],
              "event_action": "trigger",
              "dedup_key": "GH-HB-${{ matrix.os.vm }}-${{ matrix.node }}",
              "routing_key": "${{ secrets.PAGERDUTY_HEARTBEAT_KEY }}"
            }
          EOF
          }

          curl --request POST --data "$(generate_post_data)" https://events.pagerduty.com/v2/enqueue
